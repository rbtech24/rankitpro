2025-07-17T19:52:09.242210746Z node_modules/@radix-ui/react-checkbox/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-checkbox/dist/index.mjs" was ignored.
2025-07-17T19:52:09.243986692Z node_modules/@radix-ui/react-accordion/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-accordion/dist/index.mjs" was ignored.
2025-07-17T19:52:09.287661429Z node_modules/@radix-ui/react-roving-focus/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-roving-focus/dist/index.mjs" was ignored.
2025-07-17T19:52:09.291824922Z node_modules/@radix-ui/react-focus-guards/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-focus-guards/dist/index.mjs" was ignored.
2025-07-17T19:52:09.29320314Z node_modules/@radix-ui/react-collection/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-collection/dist/index.mjs" was ignored.
2025-07-17T19:52:09.300076458Z node_modules/@radix-ui/react-focus-scope/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-focus-scope/dist/index.mjs" was ignored.
2025-07-17T19:52:09.306352093Z node_modules/@radix-ui/react-radio-group/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-radio-group/dist/index.mjs" was ignored.
2025-07-17T19:52:09.54490477Z node_modules/@radix-ui/react-collapsible/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-collapsible/dist/index.mjs" was ignored.
2025-07-17T19:52:09.546989552Z node_modules/@radix-ui/react-menu/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-menu/dist/index.mjs" was ignored.
2025-07-17T19:52:09.577001554Z node_modules/@radix-ui/react-popover/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-popover/dist/index.mjs" was ignored.
2025-07-17T19:52:13.93790076Z âœ“ 2924 modules transformed.
2025-07-17T19:52:14.674101461Z rendering chunks...
2025-07-17T19:52:15.467977409Z computing gzip size...
2025-07-17T19:52:15.546153197Z dist/index.html                     4.05 kB â”‚ gzip:   1.36 kB
2025-07-17T19:52:15.546951043Z dist/assets/index-9wLjLJuK.css    127.60 kB â”‚ gzip:  19.65 kB
2025-07-17T19:52:15.547040395Z dist/assets/logout-BDKhvrkV.js      1.19 kB â”‚ gzip:   0.54 kB
2025-07-17T19:52:15.547045065Z dist/assets/index-C0QJgQmS.js   2,342.10 kB â”‚ gzip: 560.79 kB
2025-07-17T19:52:15.547231999Z 
2025-07-17T19:52:15.547238479Z (!) Some chunks are larger than 500 kB after minification. Consider:
2025-07-17T19:52:15.547241469Z - Using dynamic import() to code-split the application
2025-07-17T19:52:15.547244369Z - Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
2025-07-17T19:52:15.547247439Z - Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
2025-07-17T19:52:15.547651927Z âœ“ built in 13.10s
2025-07-17T19:52:15.795615932Z 
2025-07-17T19:52:15.795638053Z > workspace@1.0.0 build:server
2025-07-17T19:52:15.795684293Z > esbuild server/index.ts --platform=node --outfile=dist/index.js --bundle --external:pg-native --external:bcrypt --format=esm
2025-07-17T19:52:15.795688784Z 
2025-07-17T19:52:16.147053443Z âœ˜ [ERROR] Could not resolve "@babel/preset-typescript/package.json"
2025-07-17T19:52:16.147071303Z 
2025-07-17T19:52:16.147075094Z     node_modules/@babel/core/lib/config/files/module-types.js:171:36:
2025-07-17T19:52:16.147112704Z       171 â”‚ ...t packageJson = require("@babel/preset-typescript/package.json");
2025-07-17T19:52:16.147115644Z           â•µ                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-07-17T19:52:16.147118084Z 
2025-07-17T19:52:16.147122724Z   You can mark the path "@babel/preset-typescript/package.json" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle. You can also surround this "require" call with a try/catch block to handle this failure at run-time instead of bundle-time.
2025-07-17T19:52:16.147139395Z 
2025-07-17T19:52:16.303226046Z âœ˜ [ERROR] Could not resolve "../pkg"
2025-07-17T19:52:16.303242747Z 
2025-07-17T19:52:16.303245787Z     node_modules/lightningcss/node/index.js:17:27:
2025-07-17T19:52:16.303248057Z       17 â”‚   module.exports = require(`../pkg`);
2025-07-17T19:52:16.303250147Z          â•µ                            ~~~~~~~~
2025-07-17T19:52:16.303252127Z 
2025-07-17T19:52:16.303254487Z â–² [WARNING] The glob pattern require("../lightningcss.*.node") did not match any files [empty-glob]
2025-07-17T19:52:16.303256427Z 
2025-07-17T19:52:16.303258497Z     node_modules/lightningcss/node/index.js:22:29:
2025-07-17T19:52:16.303260767Z       22 â”‚ ...dule.exports = require(`../lightningcss.${parts.join('-')}.node`);
2025-07-17T19:52:16.303263137Z          â•µ                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-07-17T19:52:16.303265177Z 
2025-07-17T19:52:16.621796308Z 1 warning and 2 errors
2025-07-17T19:52:16.684317692Z ==> Build failed ðŸ˜ž
2025-07-17T19:52:16.684335353Z ==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys