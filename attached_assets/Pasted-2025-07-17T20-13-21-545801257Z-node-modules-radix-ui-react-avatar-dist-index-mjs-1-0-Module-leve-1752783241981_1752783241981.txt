2025-07-17T20:13:21.545801257Z node_modules/@radix-ui/react-avatar/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-avatar/dist/index.mjs" was ignored.
2025-07-17T20:13:21.548109624Z node_modules/@radix-ui/react-scroll-area/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-scroll-area/dist/index.mjs" was ignored.
2025-07-17T20:13:21.782612179Z node_modules/@radix-ui/react-roving-focus/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-roving-focus/dist/index.mjs" was ignored.
2025-07-17T20:13:21.79680433Z node_modules/@radix-ui/react-focus-guards/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-focus-guards/dist/index.mjs" was ignored.
2025-07-17T20:13:21.797536087Z node_modules/@radix-ui/react-menu/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-menu/dist/index.mjs" was ignored.
2025-07-17T20:13:21.801158651Z node_modules/@radix-ui/react-focus-scope/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-focus-scope/dist/index.mjs" was ignored.
2025-07-17T20:13:21.80684335Z node_modules/@radix-ui/react-collection/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-collection/dist/index.mjs" was ignored.
2025-07-17T20:13:21.819897473Z node_modules/@radix-ui/react-collapsible/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-collapsible/dist/index.mjs" was ignored.
2025-07-17T20:13:21.894130275Z node_modules/@radix-ui/react-radio-group/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-radio-group/dist/index.mjs" was ignored.
2025-07-17T20:13:21.921273094Z node_modules/@radix-ui/react-popover/dist/index.mjs (1:0): Module level directives cause errors when bundled, "use client" in "node_modules/@radix-ui/react-popover/dist/index.mjs" was ignored.
2025-07-17T20:13:25.893650612Z âœ“ 2924 modules transformed.
2025-07-17T20:13:26.50710728Z rendering chunks...
2025-07-17T20:13:27.38496888Z computing gzip size...
2025-07-17T20:13:27.449617915Z dist/index.html                     4.05 kB â”‚ gzip:   1.36 kB
2025-07-17T20:13:27.45030583Z dist/assets/index-9wLjLJuK.css    127.60 kB â”‚ gzip:  19.65 kB
2025-07-17T20:13:27.450362853Z dist/assets/logout-BDKhvrkV.js      1.19 kB â”‚ gzip:   0.54 kB
2025-07-17T20:13:27.450406485Z dist/assets/index-C0QJgQmS.js   2,342.10 kB â”‚ gzip: 560.79 kB
2025-07-17T20:13:27.450555163Z 
2025-07-17T20:13:27.450560383Z (!) Some chunks are larger than 500 kB after minification. Consider:
2025-07-17T20:13:27.450563033Z - Using dynamic import() to code-split the application
2025-07-17T20:13:27.450565683Z - Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
2025-07-17T20:13:27.450568153Z - Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
2025-07-17T20:13:27.450876279Z âœ“ built in 11.48s
2025-07-17T20:13:27.726278381Z 
2025-07-17T20:13:27.726305432Z > workspace@1.0.0 build:server
2025-07-17T20:13:27.726310542Z > esbuild server/index.ts --platform=node --outfile=dist/index.js --bundle --external:pg-native --external:bcrypt --format=esm
2025-07-17T20:13:27.726318033Z 
2025-07-17T20:13:28.033879969Z âœ˜ [ERROR] Could not resolve "@babel/preset-typescript/package.json"
2025-07-17T20:13:28.03390746Z 
2025-07-17T20:13:28.0339108Z     node_modules/@babel/core/lib/config/files/module-types.js:171:36:
2025-07-17T20:13:28.03391389Z       171 â”‚ ...t packageJson = require("@babel/preset-typescript/package.json");
2025-07-17T20:13:28.033916671Z           â•µ                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-07-17T20:13:28.033919051Z 
2025-07-17T20:13:28.033923731Z   You can mark the path "@babel/preset-typescript/package.json" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle. You can also surround this "require" call with a try/catch block to handle this failure at run-time instead of bundle-time.
2025-07-17T20:13:28.033936622Z 
2025-07-17T20:13:28.137179027Z âœ˜ [ERROR] Could not resolve "../pkg"
2025-07-17T20:13:28.137197468Z 
2025-07-17T20:13:28.137201618Z     node_modules/lightningcss/node/index.js:17:27:
2025-07-17T20:13:28.137205008Z       17 â”‚   module.exports = require(`../pkg`);
2025-07-17T20:13:28.137207788Z          â•µ                            ~~~~~~~~
2025-07-17T20:13:28.137210178Z 
2025-07-17T20:13:28.234069609Z â–² [WARNING] The glob pattern require("../lightningcss.*.node") did not match any files [empty-glob]
2025-07-17T20:13:28.23408586Z 
2025-07-17T20:13:28.23408888Z     node_modules/lightningcss/node/index.js:22:29:
2025-07-17T20:13:28.234091191Z       22 â”‚ ...dule.exports = require(`../lightningcss.${parts.join('-')}.node`);
2025-07-17T20:13:28.23409352Z          â•µ                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2025-07-17T20:13:28.234095151Z 
2025-07-17T20:13:28.521691722Z 1 warning and 2 errors
2025-07-17T20:13:28.593417716Z ==> Build failed ðŸ˜ž
2025-07-17T20:13:28.593539882Z ==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys