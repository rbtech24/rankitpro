2025-07-17T20:49:03.830100708Z       8 │ const __filename = fileURLToPath(import.meta.url);
2025-07-17T20:49:03.830103588Z         ╵                                  ~~~~~~~~~~~
2025-07-17T20:49:03.830106059Z 
2025-07-17T20:49:03.830109668Z   You need to set the output format to "esm" for "import.meta" to work correctly.
2025-07-17T20:49:03.830112239Z 
2025-07-17T20:49:04.532610603Z 3 warnings
2025-07-17T20:49:04.532644224Z 
2025-07-17T20:49:04.532648634Z   dist/server.js  12.9mb ⚠️
2025-07-17T20:49:04.532650804Z 
2025-07-17T20:49:04.532653704Z ⚡ Done in 899ms
2025-07-17T20:49:06.062670421Z ==> Uploading build...
2025-07-17T20:49:21.768583637Z ==> Uploaded in 8.2s. Compression took 7.5s
2025-07-17T20:49:21.80453047Z ==> Build successful 🎉
2025-07-17T20:49:25.20286482Z ==> Deploying...
2025-07-17T20:49:40.590341284Z ==> Running 'npm run start'
2025-07-17T20:49:40.828845983Z 
2025-07-17T20:49:40.828867934Z > workspace@1.0.0 start
2025-07-17T20:49:40.828871265Z > node dist/index.js
2025-07-17T20:49:40.828873745Z 
2025-07-17T20:49:40.912216429Z file:///opt/render/project/src/dist/index.js:1
2025-07-17T20:49:40.91223833Z require("./server.js");
2025-07-17T20:49:40.91224176Z ^
2025-07-17T20:49:40.91224427Z 
2025-07-17T20:49:40.912272492Z ReferenceError: require is not defined in ES module scope, you can use import instead
2025-07-17T20:49:40.912283393Z This file is being treated as an ES module because it has a '.js' file extension and '/opt/render/project/src/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
2025-07-17T20:49:40.912288223Z     at file:///opt/render/project/src/dist/index.js:1:1
2025-07-17T20:49:40.912291233Z     at ModuleJob.run (node:internal/modules/esm/module_job:271:25)
2025-07-17T20:49:40.912293993Z     at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:578:26)
2025-07-17T20:49:40.912296373Z     at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:116:5)
2025-07-17T20:49:40.912298304Z 
2025-07-17T20:49:40.912308934Z Node.js v22.14.0
2025-07-17T20:49:44.731626533Z ==> Exited with status 1
2025-07-17T20:49:44.746204461Z ==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys
2025-07-17T20:49:46.289705339Z ==> Running 'npm run start'
2025-07-17T20:49:46.57605349Z 
2025-07-17T20:49:46.576083742Z > workspace@1.0.0 start
2025-07-17T20:49:46.576087262Z > node dist/index.js
2025-07-17T20:49:46.576089932Z 
2025-07-17T20:49:46.606976151Z file:///opt/render/project/src/dist/index.js:1
2025-07-17T20:49:46.606996712Z require("./server.js");
2025-07-17T20:49:46.606999672Z ^
2025-07-17T20:49:46.607001942Z 
2025-07-17T20:49:46.607004683Z ReferenceError: require is not defined in ES module scope, you can use import instead
2025-07-17T20:49:46.607009223Z This file is being treated as an ES module because it has a '.js' file extension and '/opt/render/project/src/package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.
2025-07-17T20:49:46.607014403Z     at file:///opt/render/project/src/dist/index.js:1:1
2025-07-17T20:49:46.607017883Z     at ModuleJob.run (node:internal/modules/esm/module_job:271:25)
2025-07-17T20:49:46.607020443Z     at async onImport.tracePromise.__proto__ (node:internal/modules/esm/loader:578:26)
2025-07-17T20:49:46.607022953Z     at async asyncRunEntryPointWithESMLoader (node:internal/modules/run_main:116:5)
2025-07-17T20:49:46.607025354Z 
2025-07-17T20:49:46.607027874Z Node.js v22.14.0