in session data for administrators to maintain user access Adds files to store admin session cookies for testing purposes. Replit-Commit-Author: Agent Replit-Commit-Session-Id: a0ec8a5f-1673-4d66-9c1c-e916c51c7def Replit-Commit-Screenshot-Url: https://storage.googleapis.com/screenshot-production-us-central1/3ba12234-e3a1-4984-9152-1724cec12a3c/0d0cd6ec-ad76-45a0-b36d-accb5ac4e2dd.jpg

All logs
Search
Search

Live tail
GMT-5

Menu
==> Cloning from https://github.com/rbtech24/rankitpro
==> Checking out commit 6f1fe77bd7099db3b025e85dfd00bd8c0f0fe452 in branch main
==> Downloading cache...
==> Transferred 231MB in 9s. Extraction took 5s.
==> Using Node.js version 22.14.0 (default)
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Using Bun version 1.1.0 (default)
==> Docs on specifying a bun version: https://render.com/docs/bun-version
==> Running build command 'npm install; npm run build'...
added 18 packages, and audited 619 packages in 2s
77 packages are looking for funding
  run `npm fund` for details
7 moderate severity vulnerabilities
To address issues that do not require attention, run:
  npm audit fix
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.14 building for production...
transforming...
Browserslist: browsers data (caniuse-lite) is 8 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
âœ“ 2943 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                                3.82 kB â”‚ gzip:   1.30 kB
../dist/public/assets/rank it pro logo-BF7QELsX.png    402.15 kB
../dist/public/assets/index-DC5pmmhx.css               111.87 kB â”‚ gzip:  17.59 kB
../dist/public/assets/logout-CunTalWo.js                 1.80 kB â”‚ gzip:   0.85 kB
../dist/public/assets/index-CaxTlLcX.js              1,876.54 kB â”‚ gzip: 457.16 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
âœ“ built in 9.89s
  dist/index.js  470.6kb
âš¡ Done in 22ms
==> Uploading build...
==> Uploaded in 9.3s. Compression took 4.0s
==> Build successful ðŸŽ‰
==> Deploying...
==> Running 'npm run start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
Warning: Missing Stripe price ID environment variables: STRIPE_STARTER_PRICE_ID, STRIPE_PRO_PRICE_ID, STRIPE_AGENCY_PRICE_ID
Using fallback price IDs - payments may fail in production
Checking for existing super admin. Current user count: 0
Super admin exists: false
Creating new secure super admin account...
9:33:08 PM [express] =====================================
9:33:08 PM [express] SYSTEM ADMIN ACCOUNT CREATED
9:33:08 PM [express] =====================================
9:33:08 PM [express] Email: admin-1749502542878@rankitpro.system
9:33:08 PM [express] Password: ASCak2T%p4pT4DUu
9:33:08 PM [express] =====================================
9:33:08 PM [express] SAVE THESE CREDENTIALS IMMEDIATELY
9:33:08 PM [express] They will not be displayed again!
9:33:08 PM [express] =====================================
9:33:08 PM [warn] SENDGRID_API_KEY not found - email notifications will be disabled
9:33:08 PM [scheduler] Initializing scheduler service...
9:33:08 PM [scheduler] Scheduler service initialized.
9:33:08 PM [express] serving on port 5000
==> Your service is live ðŸŽ‰
9:33:18 PM [scheduler] Running scheduled review follow-up processor...
9:33:18 PM [scheduler] Review follow-up processing completed.
Session z2vqunsMttTlkCrY9AS29L-KH26ssqNm destroyed successfully
9:33:47 PM [express] POST /api/auth/logout 200 in 4ms :: {"message":"Logged out successfully"}
Session csKQvkjx7SDt_Bt-OnGnWP5WmawAczYd destroyed successfully
9:33:48 PM [express] POST /api/auth/logout 200 in 2ms :: {"message":"Logged out successfully"}
AUTH MIDDLEWARE: Checking authentication
AUTH MIDDLEWARE: Session exists: true
AUTH MIDDLEWARE: Session userId: undefined
AUTH MIDDLEWARE: No session or userId found
9:34:02 PM [express] POST /api/billing/subscription 401 in 2ms :: {"message":"Unauthorized"}
AUTH MIDDLEWARE: Checking authentication
AUTH MIDDLEWARE: Session exists: true
AUTH MIDDLEWARE: Session userId: undefined
AUTH MIDDLEWARE: No session or userId found
9:35:38 PM [express] GET /api/auth/me 401 in 1ms :: {"message":"Unauthorized"}
9:36:02 PM [express] POST /api/auth/login 401 in 1ms :: {"message":"Invalid credentials"}
9:36:14 PM [express] POST /api/auth/login 401 in 0ms :: {"message":"Invalid credentials"}
AUTH MIDDLEWARE: Checking authentication
AUTH MIDDLEWARE: Session exists: true
AUTH MIDDLEWARE: Session userId: undefined
AUTH MIDDLEWARE: No session or userId found
9:37:46 PM [express] POST /api/api-credentials 401 in 1ms :: {"message":"Unauthorized"}
==> Detected service running on port 5000
==> Docs on specifying a port: https://render.com/docs/web-services#port-binding
AUTH MIDDLEWARE: Checking authentication
AUTH MIDDLEWARE: Session exists: true
AUTH MIDDLEWARE: Session userId: undefined
AUTH MIDDLEWARE: No session or userId found
9:38:10 PM [express] GET /api/crm/available 401 in 2ms :: {"message":"Unauthorized"}
AUTH MIDDLEWARE: Checking authentication
AUTH MIDDLEWARE: Session exists: true
AUTH MIDDLEWARE: Session userId: undefined
AUTH MIDDLEWARE: No session or userId found
9:38:10 PM [express] GET /api/crm/configured 401 in 3ms :: {"message":"Unauthorized"}
AUTH MIDDLEWARE: Checking authentication
AUTH MIDDLEWARE: Session exists: true
AUTH MIDDLEWARE: Session userId: undefined
AUTH MIDDLEWARE: No session or userId found
9:38:10 PM [express] GET /api/crm/sync-history 401 in 4ms :: {"message":"Unauthorized"}
AUTH MIDDLEWARE: Checking authentication
AUTH MIDDLEWARE: Session exists: true
AUTH MIDDLEWARE: Session userId: undefined
AUTH MIDDLEWARE: No session or userId found
9:38:11 PM [express] GET /api/crm/available 401 in 1ms :: {"message":"Unauthorized"}
AUTH MIDDLEWARE: Checking authentication
AUTH MIDDLEWARE: Session exists: true
AUTH MIDDLEWARE: Session userId: undefined
AUTH MIDDLEWARE: No session or userId found
9:38:11 PM [express] GET /api/crm/sync-history 401 in 2ms :: {"message":"Unauthorized"}
AUTH MIDDLEWARE: Checking authentication
AUTH MIDDLEWARE: Session exists: true
AUTH MIDDLEWARE: Session userId: undefined
AUTH MIDDLEWARE: No session or userId found
9:38:11 PM [express] GET /api/crm/configured 401 in 1ms :: {"message":"Unauthorized"}